"""add product, events and location

Revision ID: 56b9c77d4334
Revises: 20c5c25bb65f
Create Date: 2017-04-14 16:10:19.222434

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '56b9c77d4334'
down_revision = '20c5c25bb65f'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('locations',
    sa.Column('id', postgresql.UUID(), nullable=False),
    sa.Column('address', sa.String(), nullable=True),
    sa.Column('city', sa.String(), nullable=True),
    sa.Column('country', sa.String(), nullable=True),
    sa.Column('timezone', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('events',
    sa.Column('id', postgresql.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('location_id', postgresql.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['location_id'], ['locations.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('event_attendances',
    sa.Column('user_id', postgresql.UUID(), nullable=True),
    sa.Column('event_id', postgresql.UUID(), nullable=True),
    sa.Column('reviews', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('as_volunteer', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['event_id'], ['events.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], )
    )
    op.create_table('product',
    sa.Column('id', postgresql.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('photo_uri', sa.String(), nullable=True),
    sa.Column('org_id', postgresql.UUID(), nullable=True),
    sa.Column('price', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['org_id'], ['orgs.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.add_column('orgs', sa.Column('created', sa.DateTime(), nullable=True))
    op.add_column('orgs', sa.Column('location_id', postgresql.UUID(), nullable=True))
    op.add_column('orgs', sa.Column('premium', sa.Boolean(), nullable=True))
    op.create_foreign_key(None, 'orgs', 'locations', ['location_id'], ['id'])
    op.drop_column('orgs', 'candidates')
    op.drop_column('orgs', 'fb')
    op.drop_column('orgs', 'desires')
    op.drop_column('orgs', 'location')
    op.drop_column('orgs', 'timestamp')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('orgs', sa.Column('timestamp', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.add_column('orgs', sa.Column('location', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('orgs', sa.Column('desires', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('orgs', sa.Column('fb', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('orgs', sa.Column('candidates', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'orgs', type_='foreignkey')
    op.drop_column('orgs', 'premium')
    op.drop_column('orgs', 'location_id')
    op.drop_column('orgs', 'created')
    op.drop_table('product')
    op.drop_table('event_attendances')
    op.drop_table('events')
    op.drop_table('locations')
    # ### end Alembic commands ###
